{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","components/Order.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","current","value","props","history","push","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","fish","name","price","parseFloat","status","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","console","log","updatedFish","updateFish","index","onChange","onClick","deleteFish","Login","authenticate","prototypes","PropTypes","func","isRequired","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","fetch","storeId","context","store","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","Object","keys","fishes","map","key","loadSampleFishes","Order","renderOrder","count","order","isAvailable","transitionOptions","classNames","timeout","enter","exit","CSSTransition","TransitionGroup","component","removeFromOrder","orderIds","total","reduce","prevTotal","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","details","src","alt","disabled","addToOrder","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","NotFound","Router","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.ef3a806d.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport { getFunName } from '../helpers';\n\n\nclass StorePicker extends React.Component {\n    myInput = React.createRef();\n\n    static propTypes = {\n        history:PropTypes.object\n        };\n\n    goToStore = event => {\n        event.preventDefault();\n\n        const storeName = this.myInput.current.value;\n\n        this.props.history.push(`/store/${storeName}`);\n    }\n    render() {\n        return (\n            <form className=\"store-selector\" onSubmit={this.goToStore}>\n                <h2>Please Enter A Store</h2>\n                <input type=\"text\" \n                ref={this.myInput}\n                required \n                placeholder=\"Store Name\" \n                defaultValue={getFunName()} />\n                <button type=\"submit\">Visit Store -></button>\n            </form>     \n        );\n    }\n}\n\nexport default StorePicker;","import React from'react'; \nimport PropTypes from \"prop-types\";\n\nconst Header = props => (\n    \n            <header className=\"top\">\n                <h1>Catch \n                    <span className=\"ofThe\">\n                         <span className=\"of\">Of</span> \n                         <span className=\"the\">The</span> \n                         </span>\n                         Day</h1>\n                <h3 className=\"tagline\">\n                <span>{props.tagline}</span>\n            </h3>\n            </header>\n);\n\nHeader.propTypes = {\n    tagline: PropTypes.string.isRequired\n}\n\nexport default Header;","import React from'react'; \nimport PropTypes from \"prop-types\";\n\n\n\nclass AddFishForm extends React.Component {\n    nameRef = React.createRef();\n    priceRef = React.createRef();\n    statusRef = React.createRef();\n    descRef = React.createRef();\n    imageRef = React.createRef();\n\n    static propTypes = {\n        addFish:PropTypes.func,\n    }\n\n    createFish = event => {\n        event.preventDefault();\n\n        const fish = {\n            name: this.nameRef.current.value,\n            price: parseFloat(this.priceRef.current.value),\n            status: this.statusRef.current.value,\n            desc: this.descRef.current.value,\n            image: this.imageRef.current.value\n        };\n\n        this.props.addFish(fish);\n\n        event.currentTarget.reset();\n        \n    };\n    render() {\n        return (\n            <form className=\"fish-edit\" onSubmit={this.createFish}>\n            \n            <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\n            <input name=\"price\" ref={this.priceRef}type=\"text\" placeholder=\"Price\" />\n            <select name=\"status\" ref={this.statusRef}>\n                <option value=\"available\">Fresh!</option>\n                <option value=\"unavailable\">Sold Out!</option>\n            </select>\n            <textarea name=\"desc\"  ref={this.descRef} placeholder=\"Desc\" />\n            <input name=\"image\" ref={this.imageRef} type=\"text\" placeholder=\"Image\" />\n            <button type=\"submit\">+Add Fish</button>\n            </form>                \n        );\n    }\n}\n\nexport default AddFishForm;","import React from 'react';\nimport PropTypes from \"prop-types\";\n\n\nclass EditFishForm extends React.Component {\n    static propTypes = {\n        fish: PropTypes.shape({\n            image: PropTypes.string,\n            name: PropTypes.string,\n            desc:PropTypes.string,\n            status:PropTypes.string,\n            price:PropTypes.number  \n        }),\n        index:PropTypes.string,\n        updateFish:PropTypes.func\n    };\n\n    handleChange = event => {\n        console.log(event.currentTarget.value);\n        const updatedFish = { \n            ...this.props.fish, \n            [event.currentTarget.name]: event.currentTarget.value\n        };\n        this.props.updateFish(this.props.index, updatedFish); \n    }\n    render() {\n        return (\n            <div className=\"fish-edit\">\n                <input \n                type=\"text\" \n                name=\"name\" \n                onChange={this.handleChange} \n                value={this.props.fish.name} \n                />\n                <input \n                type=\"text\" \n                name=\"price\" \n                onChange={this.handleChange} \n                value={this.props.fish.price}\n                />\n                <select \n                type=\"text\" \n                name=\"status\" \n                onChange={this.handleChange} \n                value={this.props.fish.status} \n                >\n                    <option value=\"available\">Fresh!</option>\n                    <option value=\"unavailable\">Sold Out!</option>\n                </select>\n                <textarea \n                name=\"desc\"\n                onChange={this.handleChange} \n                value={this.props.fish.desc}>\n                </textarea>\n                <input \n                type=\"text\" \n                name=\"image\" \n                onChange={this.handleChange} \n                value={this.props.fish.image} \n                />\n                <button onClick={() => this.props.deleteFish(this.props.index)}>\n                    Remove Fish\n                    </button>\n            </div>\n        );\n    }\n}\n\nexport default EditFishForm;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n\nconst Login = (props) => (\n\n    <nav className=\"login\">\n        <h2>Inventory Login</h2>\n        <p>Sign in to manage your store's inventory.</p>\n        <button className=\"github\" onClick={() => props.authenticate('Github')}>\n            Login With GitHub\n        </button>\n        <button className=\"twitter\" onClick={() => props.authenticate('Twitter')}>\n            Login With Twitter\n        </button>\n        <button className=\"facebook\" onClick={() => props.authenticate('Facebook')}>\n            Login With Facebook\n        </button>\n    </nav>\n);\n\nLogin.prototypes = {\n    authenticate: PropTypes.func.isRequired\n};\n\nexport default Login;","import Rebase from \"re-base\";\nimport firebase from \"firebase\";\n\n\n\nconst firebaseApp = firebase.initializeApp({\n    apiKey: \"AIzaSyATdqKRTQhfOYABI_PHG_dxrqay_S-qrHU\",\n    authDomain: \"sea-food-management.firebaseapp.com\",\n    databaseURL: \"https://sea-food-management.firebaseio.com\"\n    \n}); \n\nconst base = Rebase.createClass(firebaseApp.database());\n\n// this is a named export\nexport { firebaseApp };\n\n// this is default export\nexport default base;\n","import React from'react'; \nimport PropTypes from \"prop-types\";\nimport firebase from \"firebase\";\nimport AddFishForm from './AddFishForm';\nimport EditFishForm from './EditFishForm';\nimport Login from \"./Login\";\nimport base, { firebaseApp } from \"../base\";\n\n\nclass Inventory extends React.Component {\n    static propTypes = {\n        fishes:PropTypes.object,\n        updateFish:PropTypes.func,\n        deleteFish:PropTypes.func,\n        loadSampleFishes:PropTypes.func\n    }\n\n    state =  {\n        uid: null,\n        owner: null\n    }\n\n    componentDidMount() {\n        firebase.auth().onAuthStateChanged(user =>{\n            if(user) {\n                this.authHandler({user});\n            }\n        });\n    }\n\n    authHandler = async (authData) => {\n        const store = await base.fetch(this.props.storeId, {context: this});\n        console.log(store);\n\n        if(!store.owner) {\n            await base.post(`${this.props.storeId}/owner`, {\n                data: authData.user.uid\n            });\n        }\n\n        this.setState({\n            uid: authData.user.uid,\n            owner: store.owner || authData.user.uid\n        })\n\n        \n    };\n\n\n\n    authenticate = provider => {\n        const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n        firebaseApp\n        .auth()\n        .signInWithPopup(authProvider)\n        .then(this.authHandler);\n    };\n\n    logout = async () => {\n        console.log('Logging Out!');\n        await firebase.auth().signOut();\n        this.setState({ uid:null });\n    }\n\n    render() {\n        const logout = <button onClick={this.logout}>Log Out!</button>\n\n        if(!this.state.uid){\n\n            return <Login authenticate={this.authenticate} />;\n        }\n\n        if(this.state.uid !== this.state.owner) {\n            return (\n                <div>\n                    <p>Sorry you are not the owner!</p>\n                    {logout}\n                </div>\n            )\n        }\n\n        return (\n            <div className=\"inventory\">\n                <h2>Inventory</h2>\n                {logout}\n                {Object.keys(this.props.fishes).map(key => \n                <EditFishForm \n                key={key} \n                index={key}\n                fish={this.props.fishes[key]} \n                updateFish={this.props.updateFish} \n                deleteFish={this.props.deleteFish} \n                />)}\n                <AddFishForm addFish={this.props.addFish} />\n                <button onClick={this.props.loadSampleFishes}>\n                    Load Sample Fishes\n                    </button>\n            </div> \n                \n        );\n    }\n}\n\nexport default Inventory;","import React from'react'; \nimport PropTypes from \"prop-types\";\nimport { formatPrice } from \"../helpers\";\nimport { TransitionGroup,CSSTransition } from 'react-transition-group';\n\nclass Order extends React.Component {\n    static propTypes = {\n        fishes:PropTypes.object,\n        order:PropTypes.object,\n        removeFromOrder:PropTypes.func\n    };\n\n    renderOrder = key => {\n        const fish = this.props.fishes[key];\n        const count = this.props.order[key];\n        const isAvailable = fish && fish.status ===\"available\";\n        const transitionOptions = {\n            classNames: \"order\",\n            key,\n            timeout: { enter:500, exit:500 }\n        };\n        if(!fish) return null;\n        if(!isAvailable) {\n        return(<CSSTransition {...transitionOptions }>\n        <li key={key}>\n            Sorry {fish ? fish.name: \"fish\"} is no longer available \n            </li>\n           </CSSTransition>\n        );\n        }\n\n        return(\n            <CSSTransition {...transitionOptions}>\n            <li key={key}>  \n                <span>\n                    <TransitionGroup component=\"span\" className=\"count\">\n                        <CSSTransition classNames=\"count\" key={count} \n                        timeout={{ enter:500, exit:500 }}>\n                                <span>{count}</span>\n                        </CSSTransition>    \n                    </TransitionGroup>\n                lbs {fish.name}\n                {formatPrice(count * fish.price)}\n                <button onClick={() => this.props.removeFromOrder(key)}>&times;</button>\n                </span>\n            </li>\n            </CSSTransition>\n        );\n\n    }\n\n    render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n        const fish = this.props.fishes[key];\n        const count = this.props.order[key];\n        const isAvailable = fish && fish.status === \"available\";\n        if(isAvailable) {\n            return prevTotal + count * fish.price;\n        }\n        return prevTotal;\n\n    },0);\n\n\n        return (\n            <div className=\"order-wrap\">\n                <h2>Order</h2>\n                <TransitionGroup component=\"ul\" className=\"order\" >\n                    {orderIds.map(this.renderOrder)}\n                </TransitionGroup>\n                <div className=\"total\">\n                    total:\n                    <strong>{formatPrice(total)}</strong>\n                </div>\n            </div> \n                \n        );\n    }\n}\n\nexport default Order;","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from'react'; \nimport PropTypes from \"prop-types\";\nimport { formatPrice } from '../helpers';\n\n \nclass Fish extends React.Component {\n    static propTypes = {\n        details: PropTypes.shape({\n            image: PropTypes.string,\n            name: PropTypes.string,\n            desc:PropTypes.string,\n            status:PropTypes.string,\n            price:PropTypes.number  \n        }),\n        addToOrder: PropTypes.func\n    }\n\n    render() {\n        const { image, name, price, desc, status} = this.props.details;\n        const isAvailable = status === \"available\";\n\n        return (\n            <li className=\"menu-fish\">\n                <img src={image} alt={name} />\n                <h3  className=\"fish-name\">\n                    {name}\n                    <span className=\"price\">{formatPrice(price)}</span>\n                </h3>\n                <p>{desc}</p>\n        <button disabled={!isAvailable} onClick={() =>this.props.addToOrder(this.props.index)}>\n            {isAvailable ? \"Add To Order\" : \"Sold Out!\"}\n            </button>\n            </li>\n        );\n    }\n}\n\nexport default Fish;","import React from'react'; \nimport PropTypes from \"prop-types\";\nimport Header from'./Header';\nimport Inventory from'./Inventory';\nimport Order from'./Order';\nimport sampleFishes from '../sample-fishes';\nimport Fish from './Fish';\nimport base from '../base';\n\n\n\n\nclass App extends React.Component {\n    state = {\n        fishes: {},\n        order: {}\n    };\n\n    static propTypes = {\n        match:PropTypes.object\n    };\n\n    componentDidMount() {\n        const { params } =this.props.match;\n        const localStorageRef = localStorage.getItem(params.storeId);\n        \n        if(localStorageRef) {\n            this.setState({ order: JSON.parse(localStorageRef) })\n        }\n        this.ref = base.syncState(`${params.storeId}/fishes`, {\n            context: this,\n            state: \"fishes\"\n        });\n    }\n\n    componentDidUpdate() {\n        console.log(this.state.order);\n        localStorage.setItem(\n            this.props.match.params.storeId,\n            JSON.stringify(this.state.order)\n        );\n    \n    }\n\n    componentWillUnmount() {\n        base.removeBinding(this.ref);\n\n    }\n\n\n\n    addFish = (fish) => {\n        const fishes = { ...this.state.fishes };\n\n        fishes[`fish${Date.now()}`] = fish;\n\n        this.setState({ fishes });\n    };\n\n    updateFish = (key, updatedFish) => {\n        const fishes = { ...this.state.fishes };\n        fishes[key] = updatedFish;\n        this.setState({fishes});\n    };\n\n    deleteFish = (key) =>{\n        const fishes = { ...this.state.fishes };\n        fishes[key] = null;\n        this.setState({fishes})\n    }\n\n\n    loadSampleFishes = () => {\n        this.setState({ fishes: sampleFishes });\n    };\n\n    addToOrder = (key) => {\n        const order = { ...this.state.order };\n\n        order[key] = order[key] +1 || 1;\n\n        this.setState({ order })\n    };\n\n    removeFromOrder = key => {\n        const order = { ...this.state.order };\n\n        delete order[key];\n\n        this.setState({ order })\n\n    }\n\n\n    render() {\n        return (\n            <div className=\"catch-of-the-day\">\n                <div className=\"menu\">\n                    <Header tagline=\"Fresh Seafood Market\" />\n                    <ul className=\"fishes\">\n                        {Object.keys(this.state.fishes).map(key => \n                        <Fish \n                        key={key} \n                        index={key}\n                        details = {this.state.fishes[key]} \n                        addToOrder={this.addToOrder} />)}\n                    </ul>\n                </div>\n                <Order \n                fishes={this.state.fishes} \n                order={this.state.order} \n                removeFromOrder={this.removeFromOrder} />\n                <Inventory \n                addFish={this.addFish}\n                updateFish={this.updateFish} \n                deleteFish={this.deleteFish}\n                loadSampleFishes={this.loadSampleFishes} \n                fishes={this.state.fishes} \n                storeId={this.props.match.params.storeId} />\n                \n            </div>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\n\nconst NotFound = () => (\n    <div>\n        <h2>Not Found!!!!!</h2>\n    </div>\n);\n\nexport default NotFound;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport StorePicker from \"./StorePicker\";\nimport App from \"./App\";\nimport NotFound from \"./NotFound\";\n\nconst Router = () => (\n    <BrowserRouter>\n        <Switch>\n            <Route exact path=\"/\" component={StorePicker} />\n            <Route path=\"/store/:storeId\" component={App} />\n            <Route component={NotFound} />\n        </Switch>\n    </BrowserRouter>\n);\n\nexport default Router;","import React from 'react';\nimport { render } from 'react-dom';\nimport Router from './components/Router';\nimport './css/style.css';\n\nrender(<Router />, document.querySelector('#main')); "],"sourceRoot":""}